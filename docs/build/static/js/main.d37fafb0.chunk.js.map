{"version":3,"sources":["navbar/MyNavbar.js","utils/stringUtils.js","charts/Wordcloud.js","charts/Decades.js","charts/Genres.js","charts/Years.js","charts/Rates.js","charts/Summary.js","App.js","index.js"],"names":["App","react_default","a","createElement","Navbar","Header","Brand","href","Nav","NavItem","NavDropdown","title","id","MenuItem","divider","Component","stringToJson","text","JSON","parse","replace","split","join","_unused","fontSizeMapper","word","Math","log2","value","rotate","Wordcloud","_","chain","this","props","data","map","array","flatten","groupBy","o","mapValues","v","k","_ref","Object","defineProperty","sortBy","takeRight","lib_default","prepareData","Decades","floor","Date","getFullYear","react_plotly_default","values","labels","keys","type","layout","width","height","Genres","filter","isNil","Years","y","x","RUNTIME","SCATTER","buildMovieDataObject","movie","rate","rating_avg","runtime","budget","revenue","Rates","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","mode","chartType","onModeChange","bind","assertThisInitialized","onTypeChange","event","setState","target","onChange","renderSelect","marker","size","rate_avg","year","release_date","rate_count","rating_count","buildDataSeriesObject","name","Summary","tooltipRenderer","fullData","w","config","series","seriesIndex","rateAvg","find","style","padding","ceil","renderToString","options","dataLabels","enabled","colors","chroma","scale","tooltip","custom","legend","show","fill","opacity","gradient","xaxis","tickAmount","margin","react_apexcharts_min_default","prepareSeries","fetch","then","response","json","loaded","_this2","className","MyNavbar_App","BrowserRouter","Route","path","exact","render","Summary_Summary","charts_Wordcloud","Decades_Decades","Genres_Genres","Years_Years","Rates_Rates","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d37fafb0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavDropdown, MenuItem, NavItem } from 'react-bootstrap';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar>\r\n                <Navbar.Header>\r\n                    <Navbar.Brand>\r\n                        <a href=\"/\">Przetwarzanie i wizualizacja danych</a>\r\n                    </Navbar.Brand>\r\n                </Navbar.Header>\r\n                <Nav>\r\n                    <NavItem href=\"summary\">Podsumowanie</NavItem>\r\n                    <NavDropdown title=\"Dane ogólne\" id=\"basic-nav-dropdown\">\r\n                        <MenuItem href=\"wordcloud\">Słowa kluczowe</MenuItem>\r\n                        <MenuItem divider />\r\n                        <MenuItem href=\"decades\">Dekady</MenuItem>\r\n                        <MenuItem href=\"years\">Lata</MenuItem>\r\n                        <MenuItem href=\"genres\">Gatunki</MenuItem>\r\n                    </NavDropdown>\r\n                    <NavItem href=\"rates\">Oceny</NavItem>\r\n                </Nav>\r\n            </Navbar>);\r\n    }\r\n}","export function stringToJson(text) {\r\n    try {\r\n        return JSON.parse(\r\n            text.replace(/'id'/g, '\"id\"')\r\n            .split(/'name'/g).join('\"name\"')\r\n            .split(/ '/g).join(' \"')\r\n            .split(/ \\\\\"/g).join(' \"')\r\n            .split(/'}/g).join('\"}')\r\n            .split(/\\\\\"}/g).join('\"}'));\r\n    } catch {\r\n        return {};\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport WordCloud from 'react-d3-cloud';\r\nimport _ from 'lodash';\r\nimport { stringToJson } from '../utils/stringUtils';\r\n\r\nconst WORD_COUNT_KEY = 'value';\r\nconst WORD_KEY = 'text';\r\nconst WORD_CLOUD_LIMIT = 100;\r\n\r\nconst fontSizeMapper = word => Math.log2(word.value) * 5;\r\nconst rotate = word => word.value % 360;\r\n\r\nclass Wordcloud extends Component {\r\n\r\n    prepareData() {\r\n        return _.chain(this.props.data)\r\n            .map('keywords')\r\n            .map(stringToJson)\r\n            .map(array => _.map(array, 'name'))\r\n            .flatten()\r\n            .groupBy(o => o)\r\n            .mapValues('length')\r\n            .map((v, k) => { return { [WORD_KEY]: k, [WORD_COUNT_KEY]: v }; })\r\n            .sortBy(WORD_COUNT_KEY)\r\n            .takeRight(WORD_CLOUD_LIMIT)\r\n            .value();\r\n    }\r\n\r\n    render() {\r\n        return <WordCloud\r\n            data={this.prepareData()}\r\n            fontSizeMapper={fontSizeMapper}\r\n            rotate={rotate}\r\n        />;\r\n    }\r\n}\r\n\r\nexport default Wordcloud;\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nexport default class Decades extends Component {\r\n\r\n    prepareData() {\r\n        return _.chain(this.props.data)\r\n            .map('release_date')\r\n            .map(o => _.floor(new Date(o).getFullYear(), -1))\r\n            .groupBy(o => o)\r\n            .mapValues('length')\r\n            .value();\r\n    }\r\n\r\n    render() {\r\n        const data = this.prepareData();\r\n        return <Plot\r\n            data={[\r\n                {\r\n                    values: _.values(data),\r\n                    labels: _.keys(data),\r\n                    type: 'pie'\r\n                }\r\n            ]}\r\n            layout={{ width: 1320, height: 840, title: 'Ilość filmów wydanych w dekadach:' }}\r\n        />;\r\n    }\r\n}","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport { stringToJson } from '../utils/stringUtils';\r\n\r\nexport default class Genres extends Component {\r\n\r\n    prepareData() {\r\n        return _.chain(this.props.data)\r\n            .map('genres')\r\n            .map(stringToJson)\r\n            .flatten()\r\n            .map('name')\r\n            .filter(o => !_.isNil(o))\r\n            .groupBy(o => o)\r\n            .mapValues('length')\r\n            .value()\r\n    }\r\n\r\n    render() {\r\n        const data = this.prepareData();\r\n        return <Plot\r\n            data={[\r\n                {\r\n                    values: _.values(data),\r\n                    labels: _.keys(data),\r\n                    type: 'pie'\r\n                }\r\n            ]}\r\n            layout={{ width: 1320, height: 840, title: 'Ilość filmów poszczególnych gatunków:' }}\r\n        />;\r\n    }\r\n}","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nexport default class Years extends Component {\r\n\r\n    prepareData() {\r\n        return _.chain(this.props.data)\r\n            .map('release_date')\r\n            .groupBy(o => new Date(o).getFullYear())\r\n            .mapValues('length')\r\n            .value();\r\n    }\r\n\r\n    render() {\r\n        const data = this.prepareData();\r\n        return <Plot\r\n            data={[\r\n                {\r\n                    y: _.values(data),\r\n                    x: _.keys(data),\r\n                    type: 'scatter'\r\n                }\r\n            ]}\r\n            layout={{ width: 1320, height: 840, title: 'Ilość filmów rocznie:' }}\r\n        />;\r\n    }\r\n}","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst RUNTIME = 'runtime';\r\nconst BUDGET = 'budget';\r\nconst REVENUE = 'revenue';\r\n\r\nconst SCATTER = 'scatter';\r\nconst HISTOGRAM = 'histogram2dcontour';\r\n\r\nconst buildMovieDataObject = (movie) => {\r\n    return {\r\n        rate: movie.rating_avg,\r\n        runtime: movie.runtime,\r\n        budget: movie.budget,\r\n        revenue: movie.revenue\r\n    };\r\n}\r\n\r\nexport default class Rates extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mode: RUNTIME,\r\n            chartType: SCATTER\r\n        }\r\n        this.onModeChange = this.onModeChange.bind(this);\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n    }\r\n\r\n    onModeChange(event) {\r\n        this.setState({\r\n            mode: event.target.value\r\n        });\r\n    }\r\n\r\n    onTypeChange(event) {\r\n        this.setState({\r\n            chartType: event.target.value\r\n        });\r\n    }\r\n\r\n    prepareData() {\r\n        return _.chain(this.props.data)\r\n            .map(buildMovieDataObject)\r\n            .value();\r\n    }\r\n\r\n    renderSelect() {\r\n        return <div>\r\n            Ocena w zależności od:&nbsp;\r\n            <select value={this.state.mode} onChange={this.onModeChange}>\r\n                <option value={RUNTIME}>czasu</option>\r\n                <option value={BUDGET}>budżetu</option>\r\n                <option value={REVENUE}>zysku</option>\r\n            </select>\r\n            &nbsp;jako:&nbsp;\r\n            <select value={this.state.chartType} onChange={this.onTypeChange}>\r\n                <option value={SCATTER}>wykres punktowy</option>\r\n                <option value={HISTOGRAM}>histogram konturowy</option>\r\n            </select>\r\n        </div>;\r\n    }\r\n\r\n\r\n    render() {\r\n        const data = this.prepareData();\r\n        return <div>\r\n            {this.renderSelect()}\r\n            <Plot\r\n                data={[\r\n                    {\r\n                        x: _.chain(data).map(this.state.mode).filter(o => o > 0).value(),\r\n                        y: _.chain(data).map('rate').value(),\r\n                        mode: 'markers',\r\n                        type: this.state.chartType,\r\n                        marker: { size: 12 }\r\n                    }\r\n                ]}\r\n                layout={{ width: 1320, height: 840 }}\r\n            />\r\n        </div>;\r\n    }\r\n}","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts'\r\nimport chroma from 'chroma-js';\r\nimport { renderToString } from 'react-dom/server'\r\n\r\nconst buildMovieDataObject = (movie) => {\r\n    return {\r\n        title: movie.title,\r\n        rate_avg: movie.rating_avg,\r\n        revenue: movie.revenue,\r\n        year: new Date(movie.release_date).getFullYear(),\r\n        rate_count: movie.rating_count\r\n    };\r\n};\r\n\r\nconst buildDataSeriesObject = (movie) => {\r\n    return { name: movie.title, data: [[movie.year, movie.revenue, movie.rate_count]] };\r\n}\r\n\r\nconst MOVIES_COUNT = 20;\r\n\r\nexport default class Summary extends Component {\r\n\r\n    onYearChange(year) {\r\n        this.setState({ year });\r\n    }\r\n\r\n    tooltipRenderer = (fullData) => {\r\n        const data = fullData.w.config.series[fullData.seriesIndex];\r\n        const rateAvg = _.find(this.props.data, {title: data.name}).rating_avg;\r\n        const x = <div style={{padding: '5px'}}>\r\n            <b>{data.name}</b> ({data.data[0][0]})<br />\r\n            Wpływy: {data.data[0][1]} USD<br />\r\n            Średnia ocena: {_.ceil(rateAvg, 2)}<br />\r\n            Liczba ocen: {data.data[0][2]}\r\n        </div>;\r\n        return renderToString(x);\r\n    };\r\n\r\n    prepareSeries() {\r\n        return _.chain(this.props.data)\r\n            .map(buildMovieDataObject)\r\n            .sortBy(['rate_count', 'revenue'])\r\n            .filter(o => (o.rate_count < 1000 && o.revenue > 0))\r\n            .takeRight(MOVIES_COUNT)\r\n            .map(buildDataSeriesObject)\r\n            .value();\r\n    }\r\n\r\n    render() {\r\n        const options = {\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            colors: chroma.scale(['red', 'yellow', 'green']).colors(MOVIES_COUNT),\r\n            tooltip: {\r\n                custom: this.tooltipRenderer.bind(this)\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            fill: {\r\n                opacity: 0.8,\r\n                gradient: {\r\n                    enabled: false\r\n                }\r\n            },\r\n            title: {\r\n                text: 'Najczęściej oceniane filmy - TOP ' + MOVIES_COUNT\r\n            },\r\n            xaxis: {\r\n                tickAmount: 12,\r\n                type: 'category',\r\n            }\r\n        };\r\n\r\n        return <div style={{ margin: '0 auto', width: '1320px' }}>\r\n            <Chart series={this.prepareSeries()} options={options} type='bubble' width={1320} height={840} />\r\n        </div>;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport MyNavbar from './navbar/MyNavbar';\nimport Wordcloud from './charts/Wordcloud';\nimport Decades from './charts/Decades';\nimport Genres from './charts/Genres';\nimport Years from './charts/Years';\nimport Rates from './charts/Rates';\nimport Summary from './charts/Summary';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        fetch('https://raw.githubusercontent.com/fifraczek/piw_wne/master/data/data.json')\n            .then(response => response.json())\n            .then(data => this.setState({ data: data, loaded: true }));\n        this.state = {\n            loaded: false,\n            data: {}\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <MyNavbar />\n                <Router>\n                    <div>\n                        <Route path=\"/\" exact render={() => <Summary data={this.state.data} />} />\n                        <Route path=\"/summary\" render={() => <Summary data={this.state.data} />} />\n                        <Route path=\"/wordcloud\" render={() => <Wordcloud data={this.state.data} />} />\n                        <Route path=\"/decades\" render={() => <Decades data={this.state.data} />} />\n                        <Route path=\"/genres\" render={() => <Genres data={this.state.data} />} />\n                        <Route path=\"/years\" render={() => <Years data={this.state.data} />} />\n                        <Route path=\"/rates\" render={() => <Rates data={this.state.data} />} />\n                    </div>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}